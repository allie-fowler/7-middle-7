name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint-the-code:
    #  First job of the workflow.  Lint all of the things! 
    name: Lint All The Things
    # Set the agent to run on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: SuperLinter
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          ERROR_ON_MISSING_EXEC_BIT: false
          VALIDATE_BASH_EXEC: false
          OUTPUT_DETAILS: detailed
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
  # This workflow contains a 2nd job called "build"
  build:
    needs: [lint-the-code]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      #- name: Setup Python
      #  uses: actions/setup-python@v2
      #- name: Install Python dependencies
      #  run: |
      #    python -m pip install --upgrade pip
      #    pip install pytest
      #    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Get price history
        run: |
          set -x
          for symbol in `cat input/workspace.sym` 
          do 
            echo "Price history must be added manually for now."
            echo "Download 11 years of history using Yahoo's DOWNLOAD button"
            #python scripts/get_price_history.py -s ${symbol}
            bash scripts/cycle_and_compare.sh -v -s PSA
          done

      # - name: Run a test like with pytest
      #  run: |
      #    pytest

